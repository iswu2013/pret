
/*
 * 
 */

package com.pret.open.u9.warehouse;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.4
 * Mon Nov 05 09:33:35 CST 2012
 * Generated source version: 2.2.4
 * 
 */


@WebServiceClient(name = "WareService", 
                  wsdlLocation = "http://warehousehouseconfiginterface.360buy.com/WareService.asmx?wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class WareService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://tempuri.org/", "WareService");
    public final static QName WareServiceSoap12 = new QName("http://tempuri.org/", "WareServiceSoap12");
    public final static QName WareServiceSoap = new QName("http://tempuri.org/", "WareServiceSoap");
    static {
        URL url = null;
        try {
            url = new URL("http://warehousehouseconfiginterface.360buy.com/WareService.asmx?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://warehousehouseconfiginterface.360buy.com/WareService.asmx?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public WareService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WareService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WareService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns WareServiceSoap
     */
    @WebEndpoint(name = "WareServiceSoap12")
    public WareServiceSoap getWareServiceSoap12() {
        return super.getPort(WareServiceSoap12, WareServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WareServiceSoap
     */
    @WebEndpoint(name = "WareServiceSoap12")
    public WareServiceSoap getWareServiceSoap12(WebServiceFeature... features) {
        return super.getPort(WareServiceSoap12, WareServiceSoap.class, features);
    }
    /**
     * 
     * @return
     *     returns WareServiceSoap
     */
    @WebEndpoint(name = "WareServiceSoap")
    public WareServiceSoap getWareServiceSoap() {
        return super.getPort(WareServiceSoap, WareServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WareServiceSoap
     */
    @WebEndpoint(name = "WareServiceSoap")
    public WareServiceSoap getWareServiceSoap(WebServiceFeature... features) {
        return super.getPort(WareServiceSoap, WareServiceSoap.class, features);
    }

}
